{"version":3,"sources":["components/commons/Layout/Layout.jsx","api/api.js","store/reducers/errorMessageReducer.js","store/reducers/contactsListReducer.js","utils/translate.js","components/commons/Sprite/Icon.jsx","store/reducers/currentContactReducer.js","components/DeleteButton/DeleteButton.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/Home.jsx","components/Detail/Detail.jsx","pages/Contact/ContactDetail.jsx","utils/formConfig.js","utils/validateField.js","utils/prepareFormData.js","store/reducers/formContactReducer.js","components/commons/fields/Input.jsx","components/commons/fields/Date.jsx","components/commons/fields/Select.jsx","components/commons/fields/Textarea.jsx","components/commons/fields/Checkbox.jsx","components/Form/Field/Field.jsx","utils/validateForm.js","components/Form/Form.jsx","pages/Contact/ContactEdit.jsx","pages/Contact/ContactCreate.jsx","Router.jsx","components/commons/Sprite/Sprite.jsx","components/ErrorMessage/ErrorMessage.jsx","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["Layout","children","className","contactAPI","axios","get","process","res","id","data","put","delete","post","SET_ERROR_MESSAGE","HIDE_ERROR_MESSAGE","initState","showError","errorMessage","setErrorMessage","message","type","errorMessageReducer","state","action","SET_CONTACTS_LIST","initialState","list","fetchContactList","dispatch","a","status","toJSON","contactListReducer","male","female","Icon","iconId","xlinkHref","SET_CURRENT_CONTACT","first_name","last_name","birth_date","gender","job","biography","is_active","setCurrentContact","contact","fetchCurrentContact","getState","current_contact","deleteContact","currentContactReducer","DeleteButton","useDispatch","history","useHistory","onDelete","push","onClick","ContactListItem","to","translate","ContactList","useSelector","contact_list","useEffect","map","i","Home","Detail","fetchAndRedirect","ContactDetail","match","params","name","label","initValue","required","maxLength","format","options","value","field","config","length","isError","fields","forEach","CLEAN_INIT_VALUES","SET_INIT_VALUES","CHANGE_FIELD","cleanInitValues","changeField","fetchInitValue","formConfig","validateField","startValue","isTouch","sendUpdateContact","userId","form_contact","prepareFormData","formContactReducer","Input","maxlength","onChangeValue","onTouchChange","onValidate","onChange","onFocus","onBlur","Select","placeholder","defaultValue","disabled","Textarea","Checkbox","checked","target","Field","props","getField","hasError","isNotAllOriginal","Form","title","submit","form","onSubmit","e","validateForm","preventDefault","n","f","ContactEdit","ContactCreate","Router","exact","path","component","Sprite","dangerouslySetInnerHTML","__html","React","Component","ErrorMessage","error_message","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ab566c5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Layout.css\";\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"layout\">\n      <div className=\"layout__body\">{children}</div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import axios from \"axios\";\n\nexport const contactAPI = {\n  async getList() {\n    try {\n      let res = await axios.get(`${process.env.REACT_APP_API_URL}/v1/contact/`);\n      return res;\n    } catch (err) {\n      return err;\n    }\n  },\n  async getContactById(id) {\n    try {\n      let res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/v1/contact/${id}`\n      );\n      return res;\n    } catch (err) {\n      return err;\n    }\n  },\n  async updateContactById(id, data) {\n    try {\n      let res = await axios.put(\n        `${process.env.REACT_APP_API_URL}/v1/contact/${id}`,\n        data\n      );\n      return res;\n    } catch (err) {\n      return err;\n    }\n  },\n  async deleteContactById(id) {\n    try {\n      let res = await axios.delete(\n        `${process.env.REACT_APP_API_URL}/v1/contact/${id}`\n      );\n      return res;\n    } catch (err) {\n      return err;\n    }\n  },\n  async createContact(data) {\n    try {\n      let res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/v1/contact/`,\n        data\n      );\n      return res;\n    } catch (err) {\n      return err;\n    }\n  },\n};\n","const SET_ERROR_MESSAGE = \"error-message/SET-ERROR-MESSAGE\";\nconst HIDE_ERROR_MESSAGE = \"error-message/HIDE-ERROR-MESSAGE\";\n\nconst initState = {\n  showError: false,\n  errorMessage: \"\",\n};\n\nconst errorMessageReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SET_ERROR_MESSAGE:\n      return {\n        ...state,\n        showError: true,\n        errorMessage: action.message,\n      };\n    case HIDE_ERROR_MESSAGE:\n      return { ...state, showError: false, errorMessage: \"\" };\n    default:\n      return state;\n  }\n};\n\nexport const setErrorMessage = (message) => ({\n  type: SET_ERROR_MESSAGE,\n  message,\n});\n\nexport const hideErrorMessage = () => ({ type: HIDE_ERROR_MESSAGE });\n\nexport default errorMessageReducer;\n","import { contactAPI } from \"../../api/api\";\nimport { setErrorMessage } from \"./errorMessageReducer\";\n\nconst SET_CONTACTS_LIST = \"contacts-list/SET-CONTACTS-LIST\";\n\nconst initialState = {\n  list: [],\n};\n\nconst contactListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CONTACTS_LIST:\n      return {\n        ...state,\n        list: action.list,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setContactList = (list) => ({ type: SET_CONTACTS_LIST, list });\n\nexport const fetchContactList = () => async (dispatch) => {\n  const res = await contactAPI.getList();\n  if (res.status === 200) dispatch(setContactList(res.data));\n  else dispatch(setErrorMessage(res.toJSON().message));\n};\n\nexport default contactListReducer;\n","export default {\n  male: \"мужчина\",\n  female: \"женщина\",\n};\n","import React from \"react\";\n\nconst Icon = ({ iconId, className }) => {\n  return (\n    <svg className={className}>\n      <use xlinkHref={`#${iconId}`} />\n    </svg>\n  );\n};\n\nexport default Icon;\n","import { contactAPI } from \"../../api/api\";\nimport { fetchContactList } from \"./contactsListReducer\";\nimport { setErrorMessage } from \"./errorMessageReducer\";\n\nconst SET_CURRENT_CONTACT = \"current-contact/SET-CURRENT-CONTACT\";\n\nconst initState = {\n  id: null,\n  first_name: \"\",\n  last_name: \"\",\n  birth_date: null,\n  gender: null,\n  job: \"\",\n  biography: \"\",\n  is_active: false,\n};\n\nconst currentContactReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_CONTACT:\n      return { ...state, ...action.contact };\n    default:\n      return state;\n  }\n};\n\nexport const setCurrentContact = (contact) => ({\n  type: SET_CURRENT_CONTACT,\n  contact,\n});\n\nexport const fetchCurrentContact = (id) => async (dispatch, getState) => {\n  if (id != getState().current_contact.id) {\n    const res = await contactAPI.getContactById(id);\n    if (res.status === 200) {\n      dispatch(setCurrentContact(res.data));\n      return false;\n    } else {\n      dispatch(setErrorMessage(res.toJSON().message));\n      return true;\n    }\n  }\n};\n\nexport const deleteContact = (id) => async (dispatch) => {\n  const res = await contactAPI.deleteContactById(id);\n  if (res.status === 204) {\n    dispatch(fetchContactList());\n    return true;\n  } else {\n    dispatch(setErrorMessage(res.toJSON().message));\n    return false;\n  }\n};\n\nexport default currentContactReducer;\n","import React from \"react\";\nimport \"./DeleteButton.css\";\nimport Icon from \"../commons/Sprite/Icon\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { deleteContact } from \"../../store/reducers/currentContactReducer\";\n\nconst DeleteButton = ({ id }) => {\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  const onDelete = async () => {\n    if (await dispatch(deleteContact(id))) {\n      history.push(`/`);\n    }\n  };\n\n  return (\n    <button className=\"delete-button\" onClick={onDelete}>\n      <Icon iconId=\"delete\" className=\"delete-button__icon\" />\n    </button>\n  );\n};\n\nexport default DeleteButton;\n","import React from \"react\";\nimport \"./ContactListItem.css\";\nimport { NavLink } from \"react-router-dom\";\nimport translate from \"../../../utils/translate\";\nimport DeleteButton from \"../../DeleteButton/DeleteButton\";\n\nconst ContactListItem = ({ id, first_name, last_name, gender, birth_date }) => {\n  return (\n    <div className=\"cl-item\">\n      <NavLink to={`/contact/${id}`} className=\"cl-item__link\">\n        <span className=\"cl-item__name\">{first_name}</span>\n        <span className=\"cl-item__name\">{last_name}</span>\n        <span className=\"cl-item__description\">{translate[gender]}</span>\n        <span className=\"cl-item__description\">{birth_date}</span>\n      </NavLink>\n\n      <DeleteButton id={id} />\n    </div>\n  );\n};\n\nexport default ContactListItem;\n","import React, { useEffect } from \"react\";\nimport \"./ContactList.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContactList } from \"../../store/reducers/contactsListReducer\";\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ContactList = () => {\n  const list = useSelector((state) => state.contact_list.list);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactList());\n  }, []);\n\n  return (\n    <div className=\"contact-list\">\n      <div className=\"page-head\">\n        <h1 className=\"page-head__title\">Список пользователей</h1>\n        <div className=\"page-head__button-row\">\n          <NavLink to={`/contact/create`} className=\"btn\">\n            Создать пользователя\n          </NavLink>\n        </div>\n      </div>\n\n      <ul className=\"contact-list__body\">\n        {list.map((i) => (\n          <li key={i.id} className=\"contact-list__item\">\n            <ContactListItem {...i} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport Layout from \"../components/commons/Layout/Layout\";\nimport ContactList from \"../components/ContactList/ContactList\";\n\nconst Home = () => {\n  return (\n    <Layout>\n      <ContactList />\n    </Layout>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport \"./Detail.css\";\nimport { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport Icon from \"../commons/Sprite/Icon\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchCurrentContact } from \"../../store/reducers/currentContactReducer\";\nimport DeleteButton from \"../DeleteButton/DeleteButton\";\nimport translate from \"../../utils/translate\";\nimport { useHistory } from \"react-router\";\n\nconst Detail = ({ id }) => {\n  const contact = useSelector((state) => state.current_contact);\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  useEffect(() => {\n    const fetchAndRedirect = async () => {\n      if (await dispatch(fetchCurrentContact(id))) history.push(\"/\");\n    };\n    fetchAndRedirect();\n  }, [id]);\n\n  return (\n    <div className=\"c-detail\">\n      <div className=\"page-head\">\n        <h1 className=\"page-head__title\">\n          {contact.first_name} {contact.last_name}\n        </h1>\n        <Icon\n          iconId={contact.is_active ? \"check\" : \"uncheck\"}\n          className={`c-detail__status ${\n            contact.is_active\n              ? \"c-detail__status--check\"\n              : \"c-detail__status--uncheck\"\n          }`}\n        />\n        <div className=\"page-head__button-row\">\n          <NavLink to={`/contact/${contact.id}/edit`} className=\"btn\">\n            Редактировать\n          </NavLink>\n          <DeleteButton id={contact.id} />\n        </div>\n      </div>\n      <div className=\"c-detail__body\">\n        <div className=\"text\">{contact.birth_date}</div>\n        <div className=\"text\">{contact.job}</div>\n        <div className=\"text\">{translate[contact.gender]}</div>\n        <div className=\"text\">{contact.biography}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\nimport Layout from \"../../components/commons/Layout/Layout\";\nimport Detail from \"../../components/Detail/Detail\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ContactDetail = ({ match }) => {\n  return (\n    <Layout>\n      <div className=\"page-head__nav\">\n        <NavLink to=\"/\" className=\"btn btn--outline\">\n          К списку\n        </NavLink>\n      </div>\n\n      <Detail id={match.params.id} />\n    </Layout>\n  );\n};\n\nexport default ContactDetail;\n","export default [\n  {\n    name: \"first_name\",\n    label: \"Имя\",\n    initValue: \"\",\n    type: \"text\",\n    required: true,\n    maxLength: 256,\n  },\n  {\n    name: \"last_name\",\n    label: \"Фамилия\",\n    initValue: \"\",\n    type: \"text\",\n    required: true,\n    maxLength: 256,\n  },\n  {\n    name: \"birth_date\",\n    label: \"Дата рождения\",\n    initValue: \"\",\n    type: \"date\",\n    required: true,\n    maxLength: 256,\n    format: \"YYYY-MM-DD\",\n  },\n  {\n    name: \"gender\",\n    label: \"Пол\",\n    initValue: \"\",\n    type: \"select\",\n    options: [\n      { value: \"male\", label: \"мужчина\" },\n      { value: \"female\", label: \"женщина\" },\n    ],\n    required: true,\n  },\n  {\n    name: \"job\",\n    label: \"Професия\",\n    initValue: \"\",\n    type: \"text\",\n    required: true,\n    maxLength: 256,\n  },\n  {\n    name: \"biography\",\n    label: \"Биография\",\n    initValue: \"\",\n    type: \"textarea\",\n    required: true,\n    maxLength: 1024,\n  },\n  {\n    name: \"is_active\",\n    label: \"Активен\",\n    initValue: false,\n    type: \"checkbox\",\n    required: false,\n  },\n];\n","export default (field, config) => {\n  if (config.required && (field?.value === null || field?.value.length === 0))\n    return {\n      ...field,\n      isError: true,\n      errorMessage: \"Поле обязательное к заполнению\",\n    };\n  if (config.maxLength && field?.value.length > config.maxLength)\n    return {\n      ...field,\n      isError: true,\n      errorMessage: `Максимальная допустимая длина ${config.maxLength} символов`,\n    };\n  return {\n    ...field,\n    isError: false,\n    errorMessage: \"\",\n  };\n};\n","export default (fields) => {\n  let data = {};\n  fields.forEach((i) => {\n    data[i.name] = i.value;\n  });\n\n  return data;\n};\n","import { contactAPI } from \"../../api/api\";\nimport formConfig from \"../../utils/formConfig\";\nimport validateField from \"../../utils/validateField\";\nimport prepareFormData from \"../../utils/prepareFormData\";\nimport { setCurrentContact } from \"./currentContactReducer\";\nimport { setErrorMessage } from \"./errorMessageReducer\";\n\nconst CLEAN_INIT_VALUES = \"form-contact/CLEAN_INIT-VALUES\";\nconst SET_INIT_VALUES = \"form-contact/SET_INIT-VALUES\";\nconst CHANGE_FIELD = \"form-contact/CHANGE-FIELD\";\n\nconst initState = {\n  fields: [],\n};\n\nconst formContactReducer = (state = initState, action) => {\n  switch (action.type) {\n    case CLEAN_INIT_VALUES:\n      return {\n        ...state,\n        fields: formConfig.map((i) =>\n          validateField(\n            {\n              name: i.name,\n              value: i.initValue,\n              startValue: i.initValue,\n              isTouch: false,\n              isError: false,\n              errorMessage: \"\",\n            },\n            i\n          )\n        ),\n      };\n    case SET_INIT_VALUES:\n      return { ...state, fields: action.fields };\n    case CHANGE_FIELD:\n      return {\n        ...state,\n        fields: state.fields.map((i) =>\n          i.name === action.field.name ? action.field : i\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const cleanInitValues = () => ({ type: CLEAN_INIT_VALUES });\nexport const setInitValues = (fields) => ({ type: SET_INIT_VALUES, fields });\nexport const changeField = (field) => ({ type: CHANGE_FIELD, field });\n\nexport const fetchInitValue = (id) => async (dispatch, getState) => {\n  const current_contact = getState().current_contact;\n  let contact = {};\n\n  if (id == current_contact.id) contact = current_contact;\n  else {\n    const res = await contactAPI.getContactById(id);\n    if (res.status === 200) contact = res.data;\n    else {\n      dispatch(setErrorMessage(res.toJSON().message));\n      return true;\n    }\n  }\n\n  dispatch(\n    setInitValues(\n      formConfig.map((i) =>\n        validateField(\n          {\n            name: i.name,\n            value: contact[i.name],\n            startValue: contact[i.name],\n            isTouch: false,\n            isError: false,\n            errorMessage: \"\",\n          },\n          i\n        )\n      )\n    )\n  );\n};\n\nexport const sendUpdateContact = (userId) => async (dispatch, getState) => {\n  const fields = getState().form_contact.fields;\n  let res = await contactAPI.updateContactById(userId, prepareFormData(fields));\n  if (res.status === 200) {\n    dispatch(setCurrentContact(res.data));\n    dispatch(fetchInitValue(res.data.id));\n    return true;\n  } else {\n    dispatch(setErrorMessage(res.toJSON().message));\n    return false;\n  }\n};\n\nexport const sentNewContact = () => async (dispatch, getState) => {\n  const fields = getState().form_contact.fields;\n  let res = await contactAPI.createContact(prepareFormData(fields));\n  if (res.status === 201) {\n    dispatch(cleanInitValues());\n    return true;\n  } else {\n    dispatch(setErrorMessage(res.toJSON().message));\n    return false;\n  }\n};\n\nexport default formContactReducer;\n","import React, { useEffect } from \"react\";\n\nconst Input = ({\n  type,\n  label,\n  name,\n  value,\n  maxlength,\n  required,\n  onChangeValue,\n  onTouchChange,\n  onValidate,\n  isTouch,\n  isError,\n  errorMessage,\n}) => {\n  useEffect(() => {\n    onValidate();\n  }, [value]);\n  return (\n    <div className={`fields-grid__item fields-grid__item--${name}`}>\n      <label className=\"field\">\n        <span className=\"field__label\">{label}</span>\n        <input\n          type={type}\n          name={name}\n          value={value}\n          maxLength={maxlength}\n          required={required}\n          className={`field__input ${\n            isTouch && isError ? \"field__input--error\" : \"\"\n          }`}\n          onChange={onChangeValue}\n          onFocus={onTouchChange}\n          onBlur={onValidate}\n        />\n        {isTouch && isError && (\n          <span className=\"field__error\">{errorMessage}</span>\n        )}\n      </label>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect } from \"react\";\n\nconst Input = ({\n  type,\n  label,\n  name,\n  value,\n  onChangeValue,\n  required,\n  onTouchChange,\n  onValidate,\n  isTouch,\n  isError,\n  errorMessage,\n}) => {\n  useEffect(() => {\n    onValidate();\n  }, [value]);\n  return (\n    <div className={`fields-grid__item fields-grid__item--${name}`}>\n      <label className=\"field\">\n        <span className=\"field__label\">{label}</span>\n        <input\n          type=\"date\"\n          name={name}\n          value={value}\n          required={required}\n          className={`field__input ${\n            isTouch && isError ? \"field__input--error\" : \"\"\n          }`}\n          onChange={onChangeValue}\n          onFocus={onTouchChange}\n          onBlur={onValidate}\n        />\n        {isTouch && isError && (\n          <span className=\"field__error\">{errorMessage}</span>\n        )}\n      </label>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect } from \"react\";\n\nconst Select = ({\n  type,\n  label,\n  name,\n  options,\n  value,\n  required,\n  onChangeValue,\n  onTouchChange,\n  onValidate,\n  isTouch,\n  isError,\n  errorMessage,\n}) => {\n  useEffect(() => {\n    onValidate();\n  }, [value]);\n\n  return (\n    <div className={`fields-grid__item fields-grid__item--${name}`}>\n      <label className=\"field\">\n        <span className=\"field__label\">{label}</span>\n        <select\n          name={name}\n          required={required}\n          value={value}\n          className={`field__input ${\n            isTouch && isError ? \"field__input--error\" : \"\"\n          }`}\n          onChange={onChangeValue}\n          onFocus={onTouchChange}\n          onBlur={onValidate}\n          placeholder={label}\n          defaultValue={\"\"}\n        >\n          <option value=\"\" disabled>\n            {label}\n          </option>\n          {options.map((i) => (\n            <option key={i.value} value={i.value}>\n              {i.label}\n            </option>\n          ))}\n        </select>\n        {isTouch && isError && (\n          <span className=\"field__error\">{errorMessage}</span>\n        )}\n      </label>\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useEffect } from \"react\";\n\nconst Textarea = ({\n  type,\n  label,\n  name,\n  value,\n  maxlength,\n  required,\n  onChangeValue,\n  onTouchChange,\n  onValidate,\n  isTouch,\n  isError,\n  errorMessage,\n}) => {\n  useEffect(() => {\n    onValidate();\n  }, [value]);\n  return (\n    <div className={`fields-grid__item fields-grid__item--${name}`}>\n      <label className=\"field\">\n        <span className=\"field__label\">{label}</span>\n        <textarea\n          name={name}\n          maxLength={maxlength}\n          required={required}\n          value={value}\n          onChange={onChangeValue}\n          onFocus={onTouchChange}\n          onBlur={onValidate}\n          className={`field__input field__input--area ${\n            isTouch && isError ? \"field__input--error\" : \"\"\n          }`}\n        />\n        {isTouch && isError && (\n          <span className=\"field__error\">{errorMessage}</span>\n        )}\n      </label>\n    </div>\n  );\n};\n\nexport default Textarea;\n","import React, { useEffect } from \"react\";\nimport Icon from \"../Sprite/Icon\";\n\nconst Checkbox = ({\n  type,\n  label,\n  name,\n  value,\n  required,\n  onChangeValue,\n  onTouchChange,\n  onValidate,\n  isTouch,\n  isError,\n  errorMessage,\n}) => {\n  const toggleCheckbox = () => onChangeValue({ target: { value: !value } });\n  useEffect(() => {\n    onValidate();\n  }, [value]);\n  return (\n    <div className={`fields-grid__item fields-grid__item--${name}`}>\n      <label>\n        <span className=\"field__label\">{label}</span>\n        <div className=\"field-checkbox\">\n          <input\n            className=\"field-checkbox__input\"\n            type=\"checkbox\"\n            name={name}\n            checked={value}\n            value={value}\n            required={required}\n            onChange={toggleCheckbox}\n            onFocus={onTouchChange}\n            onBlur={onValidate}\n          />\n          <span className=\"field-checkbox__icon-box\">\n            <Icon\n              iconId={value ? \"check\" : \"uncheck\"}\n              className={`field-checkbox__icon ${\n                value\n                  ? \"field-checkbox__icon--check\"\n                  : \"field-checkbox__icon--uncheck\"\n              }`}\n            />\n          </span>\n          <span\n            className={`field-checkbox__label ${\n              value\n                ? \"field-checkbox__label--check\"\n                : \"field-checkbox__label--uncheck\"\n            }`}\n          >\n            {label}\n          </span>\n        </div>\n\n        {isTouch && isError && (\n          <span className=\"field__error\">{errorMessage}</span>\n        )}\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport Input from \"../../commons/fields/Input\";\nimport Date from \"../../commons/fields/Date\";\nimport Select from \"../../commons/fields/Select\";\nimport Textarea from \"../../commons/fields/Textarea\";\nimport Checkbox from \"../../commons/fields/Checkbox\";\nimport \"./Field.css\";\n\nconst Field = (props) => {\n  const getField = () => {\n    switch (props.type) {\n      case \"text\":\n        return <Input {...props} />;\n      case \"date\":\n        return <Date {...props} />;\n      case \"select\":\n        return <Select {...props} />;\n      case \"textarea\":\n        return <Textarea {...props} />;\n      case \"checkbox\":\n        return <Checkbox {...props} />;\n      default:\n        return null;\n    }\n  };\n  return <>{getField()}</>;\n};\n\nexport default Field;\n","export default (fields) => {\n  let hasError = false;\n  let isNotAllOriginal = false;\n\n  fields.forEach((i) => {\n    hasError = hasError || i.isError;\n    isNotAllOriginal = isNotAllOriginal || i.value !== i.startValue;\n  });\n  return hasError || !isNotAllOriginal;\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchInitValue } from \"../../store/reducers/formContactReducer\";\nimport Field from \"./Field/Field\";\nimport formConfig from \"../../utils/formConfig\";\nimport { changeField } from \"../../store/reducers/formContactReducer\";\nimport validateField from \"../../utils/validateField\";\nimport validateForm from \"../../utils/validateForm\";\nimport \"./Form.css\";\nimport { cleanInitValues } from \"../../store/reducers/formContactReducer\";\nimport { useHistory } from \"react-router\";\n\nconst Form = ({ id, title, submit }) => {\n  const form = useSelector((state) => state.form_contact.fields);\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  useEffect(() => {\n    const fetchAndRedirect = async () => {\n      if (id) {\n        if (await dispatch(fetchInitValue(id))) history.push(\"/\");\n      } else {\n        dispatch(cleanInitValues());\n      }\n    };\n    fetchAndRedirect();\n  }, [id]);\n\n  const onChangeValue = (e, field) => {\n    dispatch(changeField({ ...field, value: e.target.value }));\n  };\n  const onTouchChange = (field) => {\n    dispatch(changeField({ ...field, isTouch: true }));\n  };\n  const onValidate = (f, c) => dispatch(changeField(validateField(f, c)));\n  const onSubmitForm = (e) => {\n    if (!validateForm(form)) submit();\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"form\">\n      <form onSubmit={onSubmitForm}>\n        <div className=\"page-head\">\n          <h1 className=\"page-head__title\">{title}</h1>\n          <div className=\"page-head__button-row\">\n            <button type=\"submit\" className=\"btn\" disabled={validateForm(form)}>\n              Сохранить\n            </button>\n          </div>\n        </div>\n\n        <div className=\"fields-grid\">\n          {formConfig.map((i, n) => (\n            <Field\n              key={i.name}\n              name={i.name}\n              label={i.label}\n              type={i.type}\n              required={i.required}\n              maxLength={i.maxLength}\n              options={i.options}\n              value={form[n]?.value}\n              onChangeValue={(e) => onChangeValue(e, form[n])}\n              onTouchChange={() => onTouchChange(form[n])}\n              onValidate={() => onValidate(form[n], i)}\n              isTouch={form[n]?.isTouch}\n              isError={form[n]?.isError}\n              errorMessage={form[n]?.errorMessage}\n            />\n          ))}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Layout from \"../../components/commons/Layout/Layout\";\nimport Form from \"../../components/Form/Form\";\nimport { sendUpdateContact } from \"../../store/reducers/formContactReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nconst ContactEdit = ({ match }) => {\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  const submit = async () => {\n    if (await dispatch(sendUpdateContact(match.params.id))) {\n      history.push(`/contact/${match.params.id}`);\n    }\n  };\n  return (\n    <Layout>\n      <div className=\"page-head__nav\">\n        <NavLink\n          to={`/contact/${match.params.id}`}\n          className=\"btn btn--outline\"\n        >\n          Назад\n        </NavLink>\n      </div>\n\n      <Form id={match.params.id} title=\"Редактировать\" submit={submit} />\n    </Layout>\n  );\n};\n\nexport default ContactEdit;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Form from \"../../components/Form/Form\";\nimport Layout from \"../../components/commons/Layout/Layout\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { sentNewContact } from \"../../store/reducers/formContactReducer\";\n\nconst ContactCreate = () => {\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  const submit = async () => {\n    if (await dispatch(sentNewContact())) {\n      history.push(`/`);\n    }\n  };\n  return (\n    <Layout>\n      <div className=\"page-head__nav\">\n        <NavLink to={`/`} className=\"btn btn--outline\">\n          К списку\n        </NavLink>\n      </div>\n\n      <Form title=\"Создать пользователя\" submit={submit} />\n    </Layout>\n  );\n};\n\nexport default ContactCreate;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport Home from \"./pages/Home\";\nimport ContactDetail from \"./pages/Contact/ContactDetail\";\nimport ContactEdit from \"./pages/Contact/ContactEdit\";\nimport ContactCreate from \"./pages/Contact/ContactCreate\";\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/contact/create\" component={ContactCreate} />\n      <Route exact path=\"/contact/:id\" component={ContactDetail} />\n      <Route exact path=\"/contact/:id/edit\" component={ContactEdit} />\n      // todo need crate 404 page\n      <Route component={Home} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport \"./Sprite.css\";\n\nclass Sprite extends React.Component {\n  render() {\n    return (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: `\n<svg width=\"0\" height=\"0\" class=\"svg-sprite\">\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"delete\">\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n  <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n </symbol>\n<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"check\">\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n  <path d=\"M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2V5a2 2 0 00-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>\n</symbol>\n <symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"uncheck\">\n  <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\n  <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"></path>\n</symbol>\n</svg>`,\n        }}\n      />\n    );\n  }\n}\n\nexport default Sprite;\n","import React, { useEffect } from \"react\";\nimport \"./ErrorMessage.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { hideErrorMessage } from \"../../store/reducers/errorMessageReducer\";\n\nconst ErrorMessage = () => {\n  const { showError, errorMessage } = useSelector(\n    (state) => state.error_message\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(hideErrorMessage());\n    }, 3000);\n  }, [showError]);\n\n  if (showError) return <div className=\"error-message\">{errorMessage}</div>;\n  else return null;\n};\n\nexport default ErrorMessage;\n","import Router from \"./Router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Sprite from \"./components/commons/Sprite/Sprite\";\nimport ErrorMessage from \"./components/ErrorMessage/ErrorMessage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Router />\n      <Sprite />\n      <ErrorMessage />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport contactListReducer from \"./reducers/contactsListReducer\";\nimport currentContactReducer from \"./reducers/currentContactReducer\";\nimport formContactReducer from \"./reducers/formContactReducer\";\n\nimport errorMessageReducer from \"./reducers/errorMessageReducer\";\n\nlet reducer = combineReducers({\n  contact_list: contactListReducer,\n  current_contact: currentContactReducer,\n  form_contact: formContactReducer,\n\n  error_message: errorMessageReducer,\n});\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}